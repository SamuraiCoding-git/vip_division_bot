import asyncio

from aiogram import Bot
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, InputMediaPhoto

from tgbot.config import Config
from tgbot.keyboards.inline import offer_consent_keyboard, get_guide_keyboard, communication_base_keyboard, \
    pagination_keyboard, read_keyboard, guides_keyboard


async def delete_messages(bot: Bot, chat_id: int, state: FSMContext):
    data = await state.get_data()
    message_ids = data.get("message_ids", [])

    for message_id in message_ids:
        try:
            await bot.delete_message(chat_id=chat_id, message_id=message_id)
        except Exception as e:
            print(f"Failed to delete message {message_id}: {e}")

    await state.update_data(message_ids=[])

async def handle_deeplink(call: CallbackQuery, deeplink: str, state):
    deeplink_handlers = {
        "texting": handle_texting_deeplink,
        "seduction": handle_seduction_deeplink,
    }

    handler = deeplink_handlers.get(deeplink)
    if handler:
        await handler(call, state)
    else:
        await call.message.answer("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –¥–∏–ø–ª–∏–Ω–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")


async def handle_texting_deeplink(call: CallbackQuery, state: FSMContext, config: Config):
    photo_1 = config.media.photo_1
    caption_1 = config.text.texting_guide_intro
    await call.message.answer_photo(photo_1, caption_1)
    await asyncio.sleep(60)

    texting_guide_file_id = config.media.texting_guide_file_id
    file_caption = config.text.texting_guide_caption
    await call.message.answer_document(texting_guide_file_id)
    await call.message.answer(file_caption)
    await asyncio.sleep(1800)

    caption = config.text.texting_guide_advantages
    animation = config.media.texting_guide_animation
    await call.message.answer_animation(animation, caption=caption)
    await asyncio.sleep(3600)

    text = config.text.texting_guide_base
    await call.message.answer(text, reply_markup=communication_base_keyboard())
    await asyncio.sleep(43200)

    caption_2 = config.text.dialogue_analysis_text
    photo_2 = config.media.photo_2
    await call.message.answer_photo(photo_2, caption_2)
    await asyncio.sleep(1800)

    media_group = [
        InputMediaPhoto(media=config.media.media_group_photos[0]),
        InputMediaPhoto(media=config.media.media_group_photos[1]),
        InputMediaPhoto(media=config.media.media_group_photos[2])
    ]
    media_group_caption = config.text.media_group_caption
    await call.message.answer_media_group(media_group)
    await call.message.answer(media_group_caption, reply_markup=get_guide_keyboard("‚úÖ –ó–∞–±—Ä–∞—Ç—å –ì–ê–ô–î"))

    data = await state.get_data()
    if not data.get("guide_clicked"):
        text = (
            "–ö–∞–∫ –ø–∏—Å–∞—Ç—å —Ç–∞–∫, —á—Ç–æ–±—ã –¥–µ–≤–æ—á–∫–∞ –ø–æ–Ω–∏–º–∞–ª–∞, —á—Ç–æ –ø–µ—Ä–µ–¥ –Ω–µ–π –Ω–µ –ø—Ä–æ—Å—Ç–æ –æ—á–µ—Ä–µ–¥–Ω–æ–π —Å–ª–∞–≤–Ω—ã–π —É—Ö–∞–∂–µ—Ä, "
            "–∞ –æ–ø—ã—Ç–Ω—ã–π –∏ –≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω—ã–π –∞–ª—å—Ñ–∞, —Å –æ—Ö*–µ–Ω–Ω—ã–º —á—É–≤—Å—Ç–≤–æ–º —é–º–æ—Ä–∞.\n\n"
            "<b>–ó–∞–±–∏—Ä–∞–π –ø–æ—Å—Ç –∏ –º–æ–∏ –ø—Ä–∏–º–µ—Ä—ã —Å–º—Å.</b>"
        )
        await call.message.answer(text, reply_markup=read_keyboard("–ß–∏—Ç–∞—Ç—å", "https://t.me/c/1699879031/1651", "reading_1651_1_clicked"))
    await asyncio.sleep(600)

    data = await state.get_data()
    if not data.get("reading_1651_1_clicked"):
        text = config.text.read_article_part_1
        text_part_2 = config.text.read_article_part_2
        await call.message.answer(text)
        await call.message.answer(text_part_2, reply_markup=guides_keyboard())

    data = await state.get_data()
    if not data.get("successful_texting_clicked"):
        caption = "–†–∞–∑–±–æ—Ä –ø–µ—Ä–µ–ø–∏—Å–∫–∏ –æ—Ç —É—á–µ–Ω–∏–∫–∞, –æ–±—ä—è—Å–Ω—è—é –∫–∞–∫–∏–µ —Ñ–∏—à–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª"
        photo = config.media.reading_1651_photo
        await call.message.answer_photo(photo, caption=caption, reply_markup=read_keyboard("–ß–∏—Ç–∞—Ç—å", "https://t.me/c/1699879031/1651", "reading_1651_2_clicked"))
    await asyncio.sleep(86400)

    data = await state.get_data()
    if not data.get("reading_1651_2_clicked"):
        text = config.text.performance_text
        await call.message.answer(text, reply_markup=read_keyboard("–ß–∏—Ç–∞—Ç—å –ø–µ—Ä–µ–ø–∏—Å–∫—É", "https://t.me/c/1699879031/1735", "reading_1735_1_clicked"))
        await asyncio.sleep(900)

    data = await state.get_data()
    if not data.get("reading_1735_1_clicked"):
        caption = (
            "–ü–æ–∑–Ω–∞–∫–æ–º–∏–ª—Å—è —Å –¥–µ–≤—á–æ–Ω–∫–æ–π, –≤—Å—ë –ø–æ –ø—Ä–∏–≤–∞—Ç–∫–µ, –ø–æ–∫–∞–∑–∞–ª —Ü–µ–Ω–Ω–æ—Å—Ç—å, –ø–æ –Ω–∞—á–∞–ª—É "
            "–≤—ã—ë–±—ã–≤–∞–ª–∞—Å—å –∏ –≥–Ω—É–ª–∞ –ø–∞–ª—å—Ü—ã.\n\n"
            "–°–ø—É—Å—Ç—è –¥–≤–∞ –¥–Ω—è –æ–±—â–µ–Ω–∏—è –≥–æ—Ç–æ–≤–∞ —Å–Ω—è—Ç—å –¥–æ–º —Å –ë–∞—Åc–∏–∫–æ–º, —á—Ç–æ –±—ã —è ü§¥üèª –æ—Ç–¥—ã—Ö–Ω—É–ª üòÑ"
        )
        photo = "AgACAgIAAxkBAALEkmdy0movAzjNmJEvUQEozr3PPE-KAAKb6TEbOoaJS0SeGzCpreeMAQADAgADeQADNgQ"
        await call.message.answer_photo(photo, caption=caption,
                                        reply_markup=read_keyboard("–ß–∏—Ç–∞—Ç—å", "https://t.me/c/1699879031/1735",
                                                                   "reading_1735_2_clicked", True))
        await asyncio.sleep(1800)

    data = await state.get_data()
    if not data.get("reading_1735_2_clicked"):
        text = (
            "–° –¥–µ–≤—É—à–∫–æ–π –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –±–∞–ª–∞–Ω—Å –ø–æ–¥*–µ–±–æ–≤ –∏ –¥—É—à–µ–≤–Ω–æ—Å—Ç–∏, "
            "–Ω—É–∂–Ω–æ —Ç–∞–∫–∂–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∏–º, —á—Ç–æ —Ç—ã —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ—è–≤–ª—è–µ—Ç –∑–∞–±–æ—Ç—É –∏ –≥–æ—Ç–æ–≤ –∑–∞—â–∏—â–∞—Ç—å –±–ª–∏–∑–∫–∏—Ö. "
            "–í –±–µ—Å–ø–ª–∞—Ç–Ω–æ–º –≥–∞–π–¥–µ –ø–æ —Å–æ–±–ª–∞–∑–Ω–µ–Ω–∏—é —è —É–∂–µ –≤—Å–µ —Ä–∞—Å—Å–∫–∞–∑–∞–ª, –Ω–µ –ª–µ–Ω–∏—Å—å —á–∏—Ç–∞—Ç—å. "
            "–≠—Ç–æ –¥–æ–ª–∂–µ–Ω –∑–Ω–∞—Ç—å –∫–∞–∂–¥—ã–π –º—É–∂—á–∏–Ω–∞!"
        )
        await call.message.answer(text, reply_markup=get_guide_keyboard("–ß–∏—Ç–∞—Ç—å –ì–ê–ô–î ‚úÖ"))

async def handle_seduction_deeplink(call: CallbackQuery, config: Config):
    video_note = config.media.video_note
    video_file = config.media.video_file
    try:
        await call.message.answer_video_note(video_note)
    except Exception as e:
        await call.message.answer_video(video_file)
    await asyncio.sleep(60)

    text = (
        "–¢–æ, —á—Ç–æ —Ç—ã —Å–µ–π—á–∞—Å –ø—Ä–æ—á–∏—Ç–∞–µ—à—å ‚Äî –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–æ–º–µ–Ω—è–µ—Ç —Ç–≤–æ–µ –º—ã—à–ª–µ–Ω–∏–µ, –Ω–∞—Å–ª–∞–∂–¥–∞–π—Å—è ü§ù\n\n"
        "<b>–í—Ä–µ–º—è —á—Ç–µ–Ω–∏—è:</b> 11 –º–∏–Ω—É—Ç"
    )
    file = config.media.guides_seduction_file_id
    await call.message.answer_document(file)
    await call.message.answer(text)
    await asyncio.sleep(300)

    photo_1 = config.media.pagination_photos[0]

    # "AgACAgIAAxkBAAICGmdxSVyiWahM-a-rS3NAk0rYqVpDAALQ5TEbJ2-RSwwAAZtOAeeXDQEAAwIAA3kAAzYE"
    await call.message.answer_photo(photo_1, reply_markup=pagination_keyboard(1))
    await asyncio.sleep(1500)

    text = config.text.texting_guide_advantages
    animation = config.media.guide_animation
    await call.message.answer_video(animation, caption=text)
    await asyncio.sleep(3600)




async def send_consent_request(call: CallbackQuery, state: FSMContext):
    text = (
        "–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ë–û–¢ –∏ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–∞—Ç—å "
        "<a href=\"https://docs.google.com/document/d/14V62s6TOVBT8uOB-4UVX6NcTJqsxmVdz5GZnzYQeRe0/edit?tab=t.0\">—Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö —Ä–∞—Å—Å—ã–ª–æ–∫</a> –∏ "
        "<a href=\"https://docs.google.com/document/d/10i9OLsAMYRiNaLuCZwBTE8w9gHCetNgj-AZU_lweodE/edit?usp=drive_link\">—Å–æ–≥–ª–∞—Å–∏–µ –æ—Ñ–µ—Ä—Ç—É –ø–æ –æ–∫–∞–∑–∞–Ω–∏—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–æ–Ω–Ω—ã—Ö —É—Å–ª—É–≥</a>. "
        "<i>–ü–æ–¥—Ä–æ–±–Ω–µ–µ</i> <a href=\"https://docs.google.com/document/d/188a7jAnvl-iB9DKyiVtzJqzm6QfS6oZiezEjfuT9n0w/edit?usp=drive_link\">—Ç—É—Ç</a>"
    )
    sent_message = await call.message.answer(
        text,
        parse_mode="HTML",
        disable_web_page_preview=True,
        reply_markup=offer_consent_keyboard(False)
    )
    await state.update_data(message_ids=[sent_message.message_id])
